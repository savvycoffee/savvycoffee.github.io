<script type="module">
    // Import the functions you need from the SDKs you need
import { initializeApp } from "https://www.gstatic.com/firebasejs/9.6.10/firebase-app.js";
import { getAuth, signInWithEmailAndPassword, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/9.6.10/firebase-auth.js";
    // TODO: Add SDKs for Firebase products that you want to use
    // https://firebase.google.com/docs/web/setup#available-libraries
  
    // Your web app's Firebase configuration
// For Firebase JS SDK v7.20.0 and later, measurementId is optional
const firebaseConfig = {
  apiKey: "AIzaSyDRY9i6jciPJX6sisTt-na869tILD3NbkM",
  authDomain: "savvy-drops.firebaseapp.com",
  projectId: "savvy-drops",
  storageBucket: "savvy-drops.appspot.com",
  messagingSenderId: "410499852250",
  appId: "1:410499852250:web:786f4c1db00673a2d242e3",
  measurementId: "G-RKB7K5B6VM"
};
  
    // Initialize Firebase and declare "global" variables. all variables declared in this section are accessible to functions that follow.
    const app = initializeApp(firebaseConfig);
    const auth = getAuth(app);
  
    
    
   //identify auth action forms
    let signInForm = document.getElementById('wf-form-signin-form');    
   
    //assign event listeners, if the elements exist   
     if(typeof(signInForm) !== null) {
      signInForm.addEventListener('submit', handleSignIn, true)
      } else {};
  
      //handle signIn
    
    function handleSignIn(e) {
        e.preventDefault();
        e.stopPropagation();
        
      const email = document.getElementById('signin-email').value;
      const password = document.getElementById('signin-password').value;
      
      signInWithEmailAndPassword(auth, email, password)
    .then((userCredential) => {
      // Signed in 
      const user = userCredential.user;
    })
    .catch((error) => {
      const errorCode = error.code;
      const errorMessage = error.message;
      var errorText = document.getElementById('signin-error-message');
      console.log(errorMessage);
      document.getElementById('error_message').innerText = errorMessage;
      $('#error_message').show();
    });
    }
  
    let privatePages = [
      '/admin/dashboard',
      '/admin/campaigns',
      '/admin/create-roaster'
    ];
  
    let publicPages = [
      '/',
      '/admin/signup',
      '/admin/login'
    ];
  
    onAuthStateChanged(auth, (user) => {
      let currentPath = window.location.pathname;
      let publicElements = document.querySelectorAll("[data-onlogin='hide']");
      let privateElements = document.querySelectorAll("[data-onlogin='show']");
  
      if (user) {
      // User is signed in, see docs for a list of available properties			
      
          const uid = user.uid;
          if (publicPages.includes(currentPath)) { 
              window.location.replace('/admin/dashboard');
          }
          privateElements.forEach(function(element) {
          element.style.display = "initial";
          });
          
          publicElements.forEach(function(element) {
          element.style.display = "none";
          });
          
          console.log(`The current user's UID is equal to ${uid}`);
          // ...
      } else {
      // User is signed out
        if (privatePages.includes(currentPath)) {
          window.location.replace('/');
        } 
        publicElements.forEach(function(element) {
          element.style.display = "initial";
        });
        
        privateElements.forEach(function(element) {
          element.style.display = "none";
        });
      }
    });

  </script>
